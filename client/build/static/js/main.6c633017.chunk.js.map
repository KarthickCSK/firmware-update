{"version":3,"sources":["components/update/play.svg","components/uploadTwin/uploadTwin.js","components/common/styledProgressBar.js","components/update/update.js","components/fileupload/fileupload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","process","REACT_APP_VM_SERVER","REACT_APP_UPDATE_TWIN","UploadTwin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTwin","e","preventDefault","_this$state","state","softwareVersion","url","alert","setState","updateTwinLoading","axios","method","headers","Access-Control-Allow-Origin","Content-Type","Access-Control-Allow-Headers","Access-Control-Allow-Methods","data","software_version","then","response","console","log","catch","err","handleInput","_e$target","target","name","value","_this$state2","react_default","a","createElement","onSubmit","class","for","type","id","aria-describedby","placeholder","onChange","className","Component","StyledProgressbar","dist_default","percentage","text","strokeWidth","styles","root","path","stroke","strokeLinecap","transition","trail","fill","fontSize","REACT_APP_GETSTATUS","Update","getStatus","getFirmwareLoading","firmwareStatuses","objectSpread","showStatus","status","index","otaStatus","key","currentVersion","pendingVersion","style","width","styledProgressBar","concat","_this2","uploadTwin_UploadTwin","cursor","data-toggle","data-target","role","aria-expanded","aria-controls","src","require","alt","length","map","text-align","onClick","REACT_APP_SERVER","REACT_APP_GETBLOBS","REACT_APP_UPLOADBLOB","columns","Header","accessor","resizable","Cell","href","FileUpload","uploadFirmware","selectedFile","uploadFirmwareLoading","formData","FormData","append","post","content-type","message","getBlobDetails","error","document","getElementById","getBlobsLoading","blobs","handleselectedFile","event","files","aria-labelledby","data-parent","es","loading","showPagination","defaultPageSize","loadingText","noDataText","accept","update_Update","App","BrowserRouter","Switch","Route","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c633017.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.1d5f4bfc.svg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./uploadTwin.css\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_TWIN } = process.env;\r\n\r\nexport default class UploadTwin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      softwareVersion: \"1.0.0.006\",\r\n      updateTwinLoading: false,\r\n      url:\r\n        \"https://wrdm2chetanpackage.blob.core.windows.net/wrdm2-package-file-chetan/package.tar.gz\"\r\n    };\r\n  }\r\n  updateTwin = e => {\r\n    e.preventDefault();\r\n    const { softwareVersion, url } = this.state;\r\n    if (softwareVersion === \"\" || url === \"\") {\r\n      alert(\"Please enter all the fields\");\r\n    } else {\r\n      this.setState({ updateTwinLoading: true });\r\n      axios({\r\n        method: \"post\",\r\n        url: REACT_APP_VM_SERVER + REACT_APP_UPDATE_TWIN ,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\r\n          \"Access-Control-Allow-Methods\": \"POST\"\r\n        },\r\n        data: {\r\n          software_version: softwareVersion,\r\n          url: url\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(response);\r\n          alert('Firmware updated successfully')\r\n          this.setState({ updateTwinLoading: false });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert('Error in Firmware update')\r\n          this.setState({ updateTwinLoading: false });\r\n        });\r\n    }\r\n  };\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"url\") {\r\n      this.setState({ url: value });\r\n    }\r\n    if (name === \"softwareVersion\") {\r\n      this.setState({ softwareVersion: value });\r\n    }\r\n  };\r\n  render() {\r\n    const { url, softwareVersion, updateTwinLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.updateTwin}>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Software version</label>\r\n            <input\r\n              type=\"software-version\"\r\n              class=\"form-control\"\r\n              id=\"software\"\r\n              value={softwareVersion}\r\n              name=\"softwareVersion\"\r\n              aria-describedby=\"softwareHelp\"\r\n              placeholder=\"Enter software version\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Blob URL</label>\r\n            <input\r\n              type=\"text\"\r\n              value={url}\r\n              name=\"url\"\r\n              class=\"form-control\"\r\n              id=\"blobUrl\"\r\n              placeholder=\"Enter Blob URL\"\r\n              onChange={this.handleInput}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"cust-btn\">\r\n            {updateTwinLoading?'Updating Firmware..':'Update firmware'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\n\r\nfunction StyledProgressbar(props) {\r\n  return (\r\n    <CircularProgressbar\r\n      percentage={props.percentage}\r\n      text={props.text}\r\n      // Path width must be customized with strokeWidth,\r\n      // since it informs dimension calculations.\r\n      strokeWidth={5}\r\n      // You can override styles either by specifying this \"styles\" prop,\r\n      // or by overriding the default CSS here:\r\n      // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\r\n      styles={{\r\n        // Customize the root svg element\r\n        root: {},\r\n        // Customize the path, i.e. the part that's \"complete\"\r\n        path: {\r\n          // Tweak path color:\r\n          stroke: '#2c55ba',\r\n          // Tweak path to use flat or rounded ends:\r\n          strokeLinecap: 'butt',\r\n          // Tweak transition animation:\r\n          transition: 'stroke-dashoffset 0.5s ease 0s',\r\n        },\r\n        // Customize the circle behind the path\r\n        trail: {\r\n          // Tweak the trail color:\r\n          stroke: '#d6d6d6',\r\n        },\r\n        // Customize the text\r\n        text: {\r\n          // Tweak text color:\r\n          fill: '#2c55ba',\r\n          // Tweak text size:\r\n          fontSize: '30px',\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default StyledProgressbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\r\nimport \"./update.css\";\r\nimport StyledProgressbar from \"../common/styledProgressBar\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\r\nexport default class Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firmwareStatuses: [],\r\n      getFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getStatus();\r\n  }\r\n\r\n  getStatus = () => {\r\n    this.setState({ getFirmwareLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_VM_SERVER + REACT_APP_GETSTATUS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ firmwareStatuses: [{ ...response.data }] });\r\n        this.setState({ getFirmwareLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getFirmwareLoading: false });\r\n      });\r\n  };\r\n\r\n  showStatus = (status, index) => {\r\n    let percentage = 0;\r\n    switch (status.otaStatus) {\r\n      case \"WaitingForUpdate\":\r\n        percentage = 5;\r\n        break;\r\n      case \"SoftwareUpdateinProgress\":\r\n        percentage = 15;\r\n        break;\r\n      case \"DownloadComplete\":\r\n        percentage = 25;\r\n        break;\r\n      case \"UnzipComplete\":\r\n        percentage = 40;\r\n        break;\r\n      case \"ReadPackageDataComplete\":\r\n        percentage = 55;\r\n        break;\r\n      case \"PreInstallComplete\":\r\n        percentage = 70;\r\n        break;\r\n      case \"InstallComplete\":\r\n        percentage = 85;\r\n        break;\r\n      case \"SoftwareUpdateComplete\":\r\n        percentage = 100;\r\n        break;\r\n      default:\r\n        percentage = 0;\r\n    }\r\n    return (\r\n      <div className=\"status-container\" key={index}>\r\n        <div className=\"status-details-container\">\r\n          <b>OTA Status: </b>\r\n          <span>{status.otaStatus}</span>\r\n          <br />\r\n          <b>Current version: </b>\r\n          <span>{status.currentVersion}</span>\r\n          <br />\r\n          <b>Pending Status: </b>\r\n          <span>{status.pendingVersion}</span>\r\n          <br />\r\n        </div>\r\n        <div style={{ width: \"76px\" }}>\r\n          <StyledProgressbar percentage={percentage} text={`${percentage}%`} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const { firmwareStatuses, getFirmwareLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row update-row\">\r\n          <div className=\"col-6\">\r\n            <UploadTwin />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header toggle-card\" id=\"headingOne\">\r\n                  <div\r\n                    className=\"row\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#toggleFirmware\"\r\n                    role=\"button\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"toggleFirmware\"\r\n                  >\r\n                    <img\r\n                      className=\"img-upload\"\r\n                      src={require(\"./play.svg\")}\r\n                      alt=\"...\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#showFirmwareDetails\"\r\n                    />\r\n                    <p className=\"col-10 upload-text\">Status</p>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\r\n                    <div className=\"card firm-card\">\r\n                      <div className=\"card-body\">\r\n                        {firmwareStatuses.length?firmwareStatuses.map((status, index) =>\r\n                          this.showStatus(status, index)\r\n                        ):<p style={{'text-align': 'center'}}>No records found</p>}\r\n                      </div>\r\n                      <div className=\"toogle-footer\">\r\n                        <button type=\"button\" className=\"cust-btn\">\r\n                          View Logs\r\n                        </button>\r\n                        <button type=\"button\" className=\"cust-btn\" onClick={this.getStatus}>\r\n                          {getFirmwareLoading?'Refreshing..':'Refresh'}\r\n                        </button>\r\n                        {/* <img\r\n                          className=\"close-firm\"\r\n                          src={require(\"./close.svg\")}\r\n                          title=\"close\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"upload-firm\"\r\n                          src={require(\"./upload.svg\")}\r\n                          title=\"upload\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          className=\"send-firm\"\r\n                          src={require(\"./send.svg\")}\r\n                          title=\"send\"\r\n                          alt=\"...\"\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Update from \"../update/update\";\r\nimport axios from \"axios\";\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport \"./fileupload.css\";\r\nconst {\r\n  REACT_APP_SERVER,\r\n  REACT_APP_GETBLOBS,\r\n  REACT_APP_UPLOADBLOB\r\n} = process.env;\r\nconst columns = [{\r\n  Header: 'Name',\r\n  accessor: 'name' // String-based value accessors!\r\n}, {\r\n  Header: 'Download Link',\r\n  resizable: true,\r\n  Cell: props => <a href={`https://wrdm2chetanpackage.blob.core.windows.net/firmware/${props.value}`}>Link</a>\r\n},\r\n{\r\n  Header: 'Date',\r\n  accessor: 'lastModified'\r\n}]\r\nexport default class FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      blobs: [],\r\n      getBlobsLoading: false,\r\n      uploadFirmwareLoading: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getBlobDetails();\r\n  }\r\n\r\n  uploadFirmware = () => {\r\n    if (this.state.selectedFile) {\r\n      this.setState({ uploadFirmwareLoading: true });\r\n      const formData = new FormData();\r\n      formData.append(\"firmare\", this.state.selectedFile);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      axios\r\n        .post(REACT_APP_SERVER + REACT_APP_UPLOADBLOB, formData, config)\r\n        .then(response => {\r\n          console.log(\"ki\", response);\r\n          this.setState({ uploadFirmwareLoading: false });\r\n          if (response.data.status) {\r\n            alert(response.data.message);\r\n            this.getBlobDetails();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          alert(\"Error in upload\");\r\n          this.setState({ uploadFirmwareLoading: false });\r\n        });\r\n      document.getElementById(\"file\").value = \"\";\r\n      this.setState({ selectedFile: null });\r\n    } else {\r\n      alert(\"Please select a file\");\r\n    }\r\n  };\r\n\r\n  getBlobDetails = () => {\r\n    this.setState({ getBlobsLoading: true });\r\n    axios({\r\n      method: \"get\",\r\n      url: REACT_APP_SERVER + REACT_APP_GETBLOBS\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.status) {\r\n          this.setState({ blobs: response.data.blobs });\r\n        }\r\n        this.setState({ getBlobsLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ getBlobsLoading: false });\r\n      });\r\n  };\r\n\r\n  handleselectedFile = event => {\r\n    event.preventDefault();\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  };\r\n  render() {\r\n    const { blobs, getBlobsLoading } = this.state;\r\n    return (\r\n      <div className=\"container cust-home\">\r\n        <div class=\"accordion\" id=\"accordionExample\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header custom-header\" id=\"headingOne\">\r\n              <h5 class=\"mb-0\">\r\n                <a data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                  <span class=\"fa fa-tasks\"></span>\r\n                  <label><b>&nbsp;&nbsp;Firmwares in blob: </b></label>\r\n                  <i class=\"fa fa-angle-down pull-right\"></i>\r\n                </a>\r\n              </h5>\r\n            </div>\r\n\r\n            <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n              <div class=\"card-body\">\r\n\r\n                <ReactTable\r\n                  data={blobs}\r\n                  columns={columns}\r\n                  loading={getBlobsLoading}\r\n                  showPagination={true}\r\n                  defaultPageSize={3}\r\n                  width={170}\r\n                  loadingText={'Fetching firmwares..'}\r\n                  noDataText={'No Firmwares found..'}\r\n                />\r\n                <div className=\"upload-container\">\r\n                  <label><b>Upload Firmware file to blob: </b></label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"custom-file\">\r\n                      <input\r\n                        id=\"file\"\r\n                        type=\"file\"\r\n                        accept=\".gz, .zip\"\r\n                        onChange={this.handleselectedFile}\r\n                        name=\"myFile\"\r\n                      />\r\n                      <br />\r\n                      <br />\r\n                    </div>\r\n                    <div className=\"input-group-append\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"cust-btn\"\r\n                        onClick={this.uploadFirmware}\r\n                      >\r\n                        Upload File\r\n              </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card\">\r\n            <div class=\"card-header custom-header\" id=\"headingTwo\">\r\n              <h5 class=\"mb-0\">\r\n                <a data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <span class=\"fa fa-spinner\"></span>\r\n                <label><b>&nbsp;&nbsp;Firmware status: </b></label>\r\n                <i class=\"fa fa-angle-down pull-right\"></i>\r\n                </a>\r\n              </h5>\r\n            </div>\r\n            <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n              <div class=\"card-body\">\r\n\r\n                <Update />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport FileUpload from './components/fileupload/fileupload';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={FileUpload} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}